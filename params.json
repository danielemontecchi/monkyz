{
  "name": "Monkyz",
  "tagline": "Monkyz is a dynamic and autonomous Administration Panel for Laravel 5.2",
  "body": "![Monkyz](https://raw.githubusercontent.com/lab1353/monkyz/master/assets/images/logo/monkyz_dark_80.png)\r\n\r\n> **!!! ATTENTION !!!**\r\n> This package is in development to complete at a first working version. Do not install it yet, but come to see us often to find out when it is released :)\r\n\r\n# ![monkyz logo](https://raw.githubusercontent.com/lab1353/monkyz/master/assets/images/logo/monkyz_24.png) Monkyz :: dynamic admin panel\r\n\r\n[![lab1353](https://img.shields.io/badge/powered%20by-lab1353-brightgreen.svg)](http://1353.it)\r\n[![Total Downloads](https://poser.pugx.org/lab1353/monkyz/downloads)](https://packagist.org/packages/lab1353/monkyz)\r\n[![Latest Stable Version](https://poser.pugx.org/lab1353/monkyz/v/stable)](https://packagist.org/packages/lab1353/monkyz)\r\n[![Latest Unstable Version](https://poser.pugx.org/lab1353/monkyz/v/unstable)](https://packagist.org/packages/lab1353/monkyz)\r\n[![License](https://poser.pugx.org/lab1353/monkyz/license)](https://packagist.org/packages/lab1353/monkyz)\r\n\r\n**Monkyz** is a dynamic and autonomous Administration Panel for *Laravel 5.2* .\r\n\r\nIt adapts to existing database by creating a full CRUD management for any table existing.\r\nNo configuration required: without writing a single line of code, your control panel is ready for use.\r\n\r\n## Table of Contents\r\n\r\n- [Requirements](#requirements)\r\n- [Installation](#installation)\r\n  - [General Informations](#general-informations)\r\n    - [Assets Files](#assets-files)\r\n    - [Tables Relationships](#tables-relationships)\r\n- [Configuration](#configuration)\r\n  - [File `monkyz.php`](#file-monkyzphp)\r\n  - [File `monkyz-db.php`](#file-monkyz-dbphp)\r\n    - [Parameter `tables`](#parameter-tables)\r\n    \t- [Table Parameters](#table-parameters)\r\n    \t- [Fields Parameters](#fields-parameters)\r\n- [Artisan Commands](#artisan-commands)\r\n  - [`monkyz:tables`](#monkyz-tables)\r\n- [Customize](#customize)\r\n  - [Custom Fields](#custom-fields)\r\n- [Troubleshooting](#troubleshooting)\r\n- [Change Log](#change-log)\r\n- [Into The Future](#into-the-future)\r\n- [Credits](#credits)\r\n  - [Vendors](#vendors)\r\n- [Copyright and License](#copyright-and-license)\r\n\r\n## Requirements\r\n\r\nThe requirements are:\r\n\r\n- PHP >= 5.5.9\r\n- Laravel 5.2\r\n\r\n### Optional\r\n\r\n**Monkyz** gives the option to not use the log in to access the administration panel.\r\nIf you want to have user authentication before accessing the administration panel, then you must create the `users` table using `migrations` that Laravel has inside.\r\n\r\nFor more information read the [documentation Laravel](https://www.laravel.com/docs/5.2/authentication).\r\n\r\n## Installation\r\n\r\nFirst, pull in the package through Composer:\r\n\r\n```bash\r\nphp composer.phar require lab1353/monkyz\r\n```\r\n\r\nor, for the latest version, in development:\r\n\r\n```bash\r\nphp composer.phar require lab1353/monkyz:dev-master\r\n```\r\n\r\nAnd then, within `config/app.php`, include the service provider:\r\n\r\n```php\r\n'providers' => [\r\n\tLab1353\\Monkyz\\Providers\\MonkyzServiceProvider::class,\r\n];\r\n```\r\n\r\nFinally, publish the assets:\r\n\r\n```bash\r\nphp artisan vendor:publish --provider=\"Lab1353\\Monkyz\\Providers\\MonkyzServiceProvider\"\r\n```\r\n\r\nThe following files will be published with the commands `php artisan vendor:publish`:\r\n\r\n- views in: `/resources/views/vendor/monkyz`\r\n- configuration files: `/config/lab1353/monkyz`\r\n- assets: `/public/vendor/monkyz`\r\n\r\n### General Informations\r\n\r\n#### Assets Files\r\n\r\nThe file `css/monkyz.min.css` was generated by a SCSS file.\r\nIf you are interested in changing the SCSS source files, you can find here: `/vendor/lab1353/monkyz/resources/assets/scss/`.\r\n\r\nThe file `js/monkyz.min.js` has been compressed.\r\nThe original file are: `/vendor/lab1353/monkyz/resources/assets/js/monkyz.js`.\r\n\r\n#### Tables Relationships\r\n\r\nRelations between tables must follow directions imposed by Eloquent. For more information read the section [Eloquent: Relationships](https://laravel.com/docs/5.2/eloquent-relationships)\r\n\r\n> **Monkyz** currently only supports one-to-one and many-to-one relationships.\r\n\r\n## Configuration\r\n\r\n### File `monkyz.php`\r\n\r\nThe file `config/monkyz.php` contains the configuration details of **Monkyz**:\r\n\r\n- `prefix`: prefix of url for access at **Monkyz**\r\n- `use_https` (true|false): force chema https\r\n- `cache_minutes`: minutes of duration of cache\r\n- `path_public_temp`: folder name, in `public` path, for temporary files\r\n\r\n### File `monkyz-db.php`\r\n\r\nThe file `config/monkyz-db.php` contains parameters for generate the dynamic configuration of the DB structure:\r\n\r\n- `input_from_type`: array to find the relative input according to the field type defined on the database\r\n- `input_from_name`: array to find the relative input according to the name of field\r\n- `fields_name_hide_in_edit`: array of field's name that will be hidden in edit (such as: created_at, updated_at, deleted_at)\r\n- `tables`: [view the details](#parameter-tables)\r\n\r\nThis file can be automatically generated with the [artisan command `monkyz:generate-db`](#artisan-command)\r\n\r\n#### Parameter `tables`\r\n\r\nThe `tables` parameter are the ovveride array of dynamic DB structure:\r\n\r\n```php\r\n'table_name'\t=> [\t// name of table in db\r\n\t'title'\t=> 'Table',\r\n\t'icon'\t=> 'fa fa-table fa-fw',\r\n\t'visible'\t=> true,\r\n\t'fields'\t=> [\r\n\t\t'field_name'\t=> [\t// name of field in db\r\n\t\t\t'title'\t=> 'Column',\r\n\t\t\t'input'\t=> 'text',\r\n\t\t\t'in_list'\t=> true,\r\n\t\t\t'in_edit'\t=> true,\r\n\t\t\t'enum'\t=> [\r\n\t\t\t\t'attr'\t=> 'value'\r\n\t\t\t]\r\n\t\t\t'file'\t=> [\r\n\t\t\t\t'disk'\t=> 'local',\r\n\t\t\t\t'path'\t=> 'uploads/',\r\n\t\t\t\t'overwrite'\t=> true,\r\n\t\t\t\t'resize'\t=> false,\r\n\t\t\t\t'resize_height_px'\t=> 1000,\r\n\t\t\t\t'resize_width_px'\t=> 1000,\r\n\t\t\t],\r\n\t\t\t'relation'\t=> [\r\n\t\t\t\t'table'\t=> 'table2',\r\n\t\t\t\t'field_value'\t=> 'id',\r\n\t\t\t\t'field_text'\t=> 'name',\r\n\t\t\t],\r\n\t\t\t'attributes'\t=> [\r\n\t\t\t\t'attr'\t=> 'value'\r\n\t\t\t]\r\n\t\t]\r\n\t]\r\n],\r\n```\r\n\r\n##### Table parameters\r\n\r\n- `title`: title of table\r\n- `icon`: the [fontawesome icon](http://fontawesome.io/icons/)\r\n- `visible` (true|false): visibility of table in the sidebar men√π\r\n- `fields`: list of fields in table\r\n\r\n##### Fields parameters\r\n\r\n- `title`: title of column\r\n- `input`: The values for this parameter are:\r\n  - `block`: the `<pre>` block to display formatted text\r\n  - `checkbox`: checkbox true/false\r\n  - `color`: hex color selector (for details see: [W3C HTML Forms](http://www.w3schools.com/html/html_forms.asp))\r\n  - `date`: only date tag (for details see: [W3C HTML Forms](http://www.w3schools.com/html/html_forms.asp))\r\n  - `datetime`: date and time (for details see: [W3C HTML Forms](http://www.w3schools.com/html/html_forms.asp))\r\n  - `enum`: select box for enum (mandatory to define the parameter `enum`)\r\n  - `file`: file upload (mandatory to define the parameter `file`)\r\n  - `hidden`: field hidden used, by default, to the key fields\r\n  - `image`: file upload for only image (accepted extensions: .jpg, .jpeg, .png) (mandatory to define the parameter `file`)\r\n  - `number`: number tag (for details see: [W3C HTML Forms](http://www.w3schools.com/html/html_forms.asp))\r\n  - `relation`: select box with the relation with another table (mandatory to define the parameter `relation`)\r\n  - `tel`: telephone number (for details see: [W3C HTML Forms](http://www.w3schools.com/html/html_forms.asp))\r\n  - `text`: text tag for string\r\n  - `textarea`: textarea tag\r\n  - `url`: url tag (for details see: [W3C HTML Forms](http://www.w3schools.com/html/html_forms.asp))\r\n  - (You can create [your own custom fields](#creating-custom-fields))\r\n- `in_list` (true|false): visibility in list\r\n- `in_edit` (true|false): visibility in edit and add record\r\n- `enum`: array `'key' => 'value'` for populate the select box\r\n- `file`: file/image field details\r\n  - `disk`: disk name for `Storage` class, configured in config files `filesystems.php` (for more info see [Laravel Filesystem Documentation](https://laravel.com/docs/5.2/filesystem))\r\n  - `path`: relative path of images uploaded\r\n  - `overwrite` (true|false): overwrite the file if it already exists\r\n  - `resize` (true|false): if field is a image, determines if the uploaded image will be resized\r\n  - `resize_height_px`: pixel in height for resize image\r\n  - `resize_width_px`: pixel in width for resize image\r\n- `relation`: relationship field details\r\n  - `table`: name of relationship's table\r\n  - `field_value`: name of value field of relationship's table\r\n  - `field_text`: name of text field of relationship's table\r\n- `attributes`: array (`'key' => 'value'`) of extra attributes in input\r\n\r\nIn automatically search for the type of the field input, it is to be more important to the `input_from_name` parameter rather than a `input_from_type`.\r\n\r\n> **!!! ATTENTION !!!**\r\n> **Monkyz** currently only supports one-to-one and many-to-one relationships.\r\n> All tables of many-to-many relationship will have to be defined in [config file `monkyz-db.php`](#table-parameters) and setting the parameter `visible` to `false`.\r\n\r\n## Artisan Command\r\n\r\n### `monkyz:tables`\r\n\r\n**Monkyz** provides the artisan command:\r\n\r\n```bash\r\nphp artisan monkyz:tables\r\n```\r\n\r\nThis command allows you to automatically fill in the [`monkyz-db.php` config file](#file-monkyz-dbphp).\r\n\r\nIt will automatically create all the necessary references to **Monkyz** for the db structure.\r\nNot overwrite already entered parameters: only add the parameters have not been set.\r\n\r\n## Customize\r\n\r\n### Custom Fields\r\n\r\n**Monkyz** allows the creation of types of custom fields in the edit page of the record.\r\n\r\nTo create it, follow these steps:\r\n\r\n1) If you have not already done so, to publish the views:\r\n\r\n```bash\r\nphp artisan vendor:publish --provider=\"Lab1353\\Monkyz\\Providers\\MonkyzServiceProvider\"\r\n```\r\n\r\nThe following command will be published the views files in: `/resources/views/vendor/monkyz`\r\n\r\n2) Go to the `/resources/views/vendor/monkyz` folder and create a new [file blade](https://www.laravel.com/docs/5.2/blade),\r\nappointing him as your new field (for example: `custom`):\r\n\r\n```bash\r\ncd resources/views/vendor/monkyz\r\ntouch custom.blade.php\r\n```\r\n\r\n3) Edit the new file as you prefer. Know that, the view, the following variables are passed:\r\n\r\n- `$field`: name of database column\r\n- `$record`: the [Eloquent Model](https://www.laravel.com/docs/5.2/eloquent) (to retrieve the value of the field then use: `$record->$field`)\r\n- `$params`: array of field parameters\r\n\r\n4) Now you can use your personal type of field, setting the parameter of the `input` fields:\r\n\r\n```php\r\n'table_name'\t=> [\t// name of table in db\r\n\t'fields'\t=> [\r\n\t\t'field_name'\t=> [\t// name of field in db\r\n\t\t\t'input'\t=> 'custom',\t// <-- change 'custom' with your custom field name\r\n```\r\n\r\n## Troubleshooting\r\n\r\nTo report a issues, use [GitHub Issues](https://github.com/lab1353/monkyz/issues).\r\n\r\nFor help with common problems, see [`ISSUES.md`](https://github.com/lab1353/monkyz/blob/master/ISSUES.md).\r\n\r\n## Change Log\r\n\r\nPlease see [`CHANGELOG.md`](https://github.com/lab1353/monkyz/blob/master/CHANGELOG.md) for more information what has changed recently.\r\n\r\n## Into The Future\r\n\r\n- manage useSoftDelete\r\n- compatibility with [Laravel 5.3](https://laravel.com/docs/5.3/upgrade#upgrade-5.3.0)\r\n- dynamic settings\r\n- [Laravel validation rules](https://laravel.com/docs/5.2/validation) for fields\r\n- roles for access sections\r\n- multi files uploads\r\n- widgets, counters and graph\r\n- integrate [Google Analytics](https://www.google.com/analytics/)\r\n\r\n## Credits\r\n\r\n### Vendors\r\n\r\n**Monkyz** was made using the following css/js:\r\n\r\n- [Laravel](https://laravel.com/)\r\n- [Bootstrap](http://getbootstrap.com/)\r\n- [jQuery](https://jquery.com/)\r\n- [DataTables](https://datatables.net/)\r\n- [Pace](http://github.hubspot.com/pace/docs/welcome/)\r\n- [Google Fonts](https://fonts.google.com/)\r\n- [Font Awesome](http://fontawesome.io/)\r\n\r\nAll vendors files are loaded in CDN.\r\n\r\n## Copyright and License\r\n\r\nAdministrator was written by **Daniele Montecchi** of [**lab1353**](http://1353.it).\r\n\r\nAdministrator is released under the MIT License. See the [`LICENSE.md` file](https://github.com/lab1353/monkyz/blob/master/LICENSE.md) for details.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}